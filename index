<!DOCTYPE html>
<html lang="en">
<head>
<meta charset="UTF-8">
<meta name="viewport" content="width=device-width, initial-scale=1.0">
<title>Canucks Scoreboard</title>
<style>
    body {
        background-color: #00205B; /* Canucks blue */
        color: white;
        font-family: Arial, sans-serif;
        padding: 20px;
    }
    h1 {
        color: #00843D; /* Canucks green */
        text-align: center;
    }
    .game {
        background-color: rgba(255,255,255,0.1);
        padding: 15px;
        border-radius: 10px;
        margin-bottom: 10px;
    }
    .win { color: #00FF7F; }
    .loss { color: #FF6347; }
</style>
</head>
<body>
    <h1>Canucks Scoreboard</h1>
    <div id="last-game"></div>
    <h2>Next 3 Games</h2>
    <div id="next-games"></div>

<script>
const teamId = 23; // Vancouver Canucks ID
const apiBase = "https://statsapi.web.nhl.com/api/v1";

async function loadScoreboard() {
    const today = new Date().toISOString().split("T")[0];

    // Get last game
    let lastGameRes = await fetch(`${apiBase}/schedule?teamId=${teamId}&endDate=${today}&expand=schedule.linescore`);
    let lastGameData = await lastGameRes.json();
    let lastGames = lastGameData.dates.flatMap(d => d.games);
    let lastGame = lastGames[lastGames.length - 1];

    if (lastGame) {
        let home = lastGame.teams.home;
        let away = lastGame.teams.away;
        let isWin = (home.team.id === teamId && home.score > away.score) ||
                    (away.team.id === teamId && away.score > home.score);
        document.getElementById("last-game").innerHTML = `
            <div class="game ${isWin ? 'win' : 'loss'}">
                <strong>Last Game:</strong> ${away.team.name} ${away.score} @ ${home.team.name} ${home.score}
                <br><strong>${isWin ? 'WIN' : 'LOSS'}</strong>
            </div>
        `;
    }

    // Get next 3 games
    let futureRes = await fetch(`${apiBase}/schedule?teamId=${teamId}&startDate=${today}`);
    let futureData = await futureRes.json();
    let nextGames = futureData.dates.flatMap(d => d.games).slice(0, 3);

    document.getElementById("next-games").innerHTML = nextGames.map(game => {
        let gameDate = new Date(game.gameDate);
        let opponent = (game.teams.home.team.id === teamId) ? game.teams.away.team.name : game.teams.home.team.name;
        let time = gameDate.toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' });
        return `
            <div class="game">
                ${gameDate.toDateString()} - ${opponent} @ ${time}
            </div>
        `;
    }).join('');
}

loadScoreboard();
</script>
</body>
</html>
